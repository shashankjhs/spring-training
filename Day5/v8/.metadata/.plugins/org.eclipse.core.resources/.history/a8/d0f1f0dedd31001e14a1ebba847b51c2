package com.walmart.api.order.rest.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.walmart.api.order.dao.OrderDao;
import com.walmart.api.order.feign.client.CouponServiceFeignClient;
import com.walmart.api.order.model.Order;
import com.walmart.api.order.rest.response.CouponResponse;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;

@RestController
public class OrderRestController {

	@Autowired
	private OrderDao orderDao;
	@Autowired
	private CouponServiceFeignClient feignClient;
	
	@CircuitBreaker(name="cs",fallbackMethod="placeOrderFallback")
	@PostMapping("/api/order")
	public Order placeOrder(@RequestBody Order order) {
		System.out.println("in Place Order - circuit closed - rest calls allowed");
		// Fetch couponOCde from order
		String couponCode= order.getCouponCode();
		
		// From CouponCode fetch applicable discount
		// to fetch discount we must call coupon service
		// this is rest call
		CouponResponse couponResponse = this.feignClient.findDiscountByCouponId(couponCode);
		
		int discount=couponResponse.getDiscount();
		System.out.println("discount "+ discount);
		// Apply that discount to order object
		order.setPrice(order.getPrice() - discount);
		
		//save order object to database
		orderDao.save(order);
		
		//return order object
		return order;
		
		
		
	}
	public Order placeOrderFallback(@RequestBody Order order, Throwable t) {
		System.out.println("In fallback for palce order");
		return order;
	
	}
}
